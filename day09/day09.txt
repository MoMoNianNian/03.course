NodeJs
  1.req
    使用req.url获取请求地址 
  2.res
    处理请求，返回响应
  3.模块
    http模块 
    url模块
      url.parse(urlStr) 返回值是一个url对象
    fs模块
      fs.readFile("path",function(err,data){})
      fs.readFile("./1.txt",function(err,data){})
    
    练习1：
    1.新建两个页面，分别显示红色圆形与蓝色方形
    2.新建js文件，编写服务器内容
    3.打开浏览器，输入地址
      localhost:4000/circle 显示圆形
      localhost:4000/square 显示方形
      其他地址，显示地址错误


  练习2：
    1.定义一个form表单 form.html，2个文本输入框，一个是username，一个password
    2.编写服务器代码；
    3.打开浏览器输入地址：
      localhost：4000 页面显示form表单的内容
      输入数据后点击提交
      服务端接收数据，并返回响应
      页面显示数据发送成功，服务端控制台打印username 和password的值
function getPathAndParams(UrlStr){
  .....
}
$ npm install -g nodemon 安装自动重启nodejs

fs模块
  1.读取文件，显示
    06_fs_01.js   
     fs.readFile("./day09.txt","utf-8",function(err,data){}
     var result = fs.readFileSync("./day09.txt");
  2.创建文件夹/目录 mkdir
    06_fs_02.js
    fs.mkdir('./a',function(err){}
    var result = fs.mkdirSync('./a');
  3.创建文件  ritefile
    06_fs_03.js
    fs.writeFile("./1.txt","aaa",function(err){}
    var result = fs.writeFileSync("./1.txt","aaa");
  4.读取文件夹的内容 
    06_fs_04.js 
    fs.readdir("./",function(err,files){}
    var result = fs.readdirSync("./");
  5.判断文件的状态
  fs.stat("./day09.txt",function(err,stats){}
  var stats = fs.statSync("./day09.txt");
  stats.isFile();判断是不是文件类型
  练习3：
  读取一个文件夹a，打印出文件中的所有内容